.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_armodel_plot_ar_instantaneous.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_armodel_plot_ar_instantaneous.py:


AR : simulate common driving input
==================================

This example illustrates an autoregressive model that simulates a common
driving input (i.e X->Y and X->Z) and how it is measured using the covariance
based Granger Causality


.. code-block:: default

    import numpy as np

    from frites.simulations import StimSpecAR
    from frites.conn import conn_covgc

    import matplotlib.pyplot as plt








Simulate 3 nodes 40hz oscillations
----------------------------------

Here, we use the class :class:`frites.simulations.StimSpecAR` to simulate an
stimulus-specific autoregressive model made of three nodes (X, Y and Z). This
network simulates a transfer X->Y and X->Z. X is then called a common driving
input for Y and Z


.. code-block:: default



    ar_type = 'osc_40_3'  # 40hz oscillations
    n_stim = 3          # number of stimulus
    n_epochs = 50       # number of epochs per stimulus

    ss = StimSpecAR()
    ar = ss.fit(ar_type=ar_type, n_epochs=n_epochs, n_stim=n_stim)
    print(ar)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (trials: 150, roi: 3, times: 300)>
    array([[[-0.03022208, -0.00731507, -0.10402724, ...,  0.49903037,
              0.58065749, -0.08129296],
            [-0.12885552, -0.16815554,  0.58970138, ...,  0.06857123,
              0.06702682,  0.32013252],
            [-0.25722781,  0.1908773 , -0.05779821, ..., -0.42811968,
             -0.16312173,  0.42284564]],

           [[-0.64465774, -0.03059671,  0.49202551, ..., -0.07807613,
              0.02001533, -0.08246208],
            [ 0.12289315,  0.15738293,  0.0069928 , ...,  0.35465641,
              0.20980617,  0.00481011],
            [ 0.31648735, -0.04424777, -0.47121967, ..., -0.28193123,
             -0.03647913,  0.15506089]],

           [[-0.03382247, -0.08328109, -0.46488545, ...,  0.02992742,
             -0.2782575 ,  0.15278173],
            [-0.24199598, -0.08108852,  0.09643968, ..., -0.03022302,
             -0.47532529,  0.23831987],
            [-0.42308845,  0.06521181,  0.14431697, ...,  0.16758694,
              0.65597058,  0.26027297]],
    ...
           [[-0.14716699, -0.06496116,  0.13771291, ...,  0.0158632 ,
             -0.66269887, -0.179384  ],
            [-0.16482596,  0.24803558,  0.27066199, ...,  0.01708665,
             -0.21517749, -0.26851351],
            [-0.26962332,  0.40758747,  0.18757684, ..., -0.18110855,
              0.02409162,  0.12124022]],

           [[-0.11764932, -0.08389937, -0.04395955, ...,  0.03798595,
              0.00228116, -0.05022432],
            [ 0.04630181, -0.10626367, -0.22148477, ..., -0.14024611,
             -0.16420384, -0.41992653],
            [-0.08254718, -0.49533315,  0.20891996, ...,  0.42402748,
              0.02105233, -0.15524207]],

           [[-0.02666891,  0.10282734,  0.36145308, ...,  0.56822037,
             -0.14667376, -0.56341018],
            [-0.05820607, -0.1590731 ,  0.16262582, ..., -0.17491113,
             -0.02983676,  0.14483687],
            [ 0.25810544, -0.19861023,  0.14648052, ..., -0.12106743,
             -0.2652237 , -0.0104311 ]]])
    Coordinates:
      * trials   (trials) int64 1 1 1 1 1 1 1 1 1 1 1 1 ... 3 3 3 3 3 3 3 3 3 3 3 3
      * roi      (roi) <U1 'x' 'y' 'z'
      * times    (times) float64 -0.5 -0.495 -0.49 -0.485 ... 0.98 0.985 0.99 0.995
    Attributes:
        n_stim:    3
        n_std:     3
        ar_type:   osc_40_3
        stimulus:  [1 2 3]



plot the network


.. code-block:: default


    plt.figure(figsize=(5, 4))
    ss.plot_model()
    plt.show()




.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_001.png
    :class: sphx-glr-single-img




plot the data


.. code-block:: default


    plt.figure(figsize=(7, 8))
    ss.plot(cmap='bwr')
    plt.tight_layout()
    plt.show()




.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_002.png
    :class: sphx-glr-single-img




plot the power spectrum density (PSD)


.. code-block:: default


    plt.figure(figsize=(7, 8))
    ss.plot(cmap='Reds', psd=True)
    plt.tight_layout()
    plt.show()





.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_003.png
    :class: sphx-glr-single-img




Compute the Granger-Causality
-----------------------------

We then compute and plot the Granger Causality. From the plot you can see
that there's indeed an information transfer from X->Y and X->Z and, in
addition, an instantaneous connectivity between Y.Z


.. code-block:: default


    dt = 50
    lag = 5
    step = 2
    t0 = np.arange(lag, ar.shape[-1] - dt, step)
    gc = conn_covgc(ar, roi='roi', times='times', dt=dt, lag=lag, t0=t0,
                    n_jobs=-1)

    # sphinx_gallery_thumbnail_number = 4
    plt.figure(figsize=(12, 10))
    ss.plot_covgc(gc)
    plt.tight_layout()
    plt.show()



.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_004.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

      0%|          |  : 0/3 [00:00<?,       ?it/s]     67%|######6   |  : 2/3 [00:00<00:00,   96.47it/s]    100%|##########|  : 3/3 [00:00<00:00,  135.54it/s]




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  16.515 seconds)


.. _sphx_glr_download_auto_examples_armodel_plot_ar_instantaneous.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_ar_instantaneous.py <plot_ar_instantaneous.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_ar_instantaneous.ipynb <plot_ar_instantaneous.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
