.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.15982653, 0.5754631 , 0.82791056, 0.4113898 , 0.81568279,
            0.25149241, 0.47578665],
           [0.17977631, 0.54223248, 0.96600975, 0.9300666 , 0.49389667,
            0.90098351, 0.2286321 ],
           [0.72764458, 0.41203543, 0.87511667, 0.7093539 , 0.08761002,
            0.52354857, 0.53961013],
           [0.80752298, 0.62492359, 0.74780098, 0.55119058, 0.50484615,
            0.44308366, 0.75988672],
           [0.76807157, 0.95474028, 0.33617414, 0.96702527, 0.14746203,
            0.4537792 , 0.48347624],
           [0.68093586, 0.23832658, 0.49675222, 0.10283124, 0.10353016,
            0.84119831, 0.87063367],
           [0.40119846, 0.99130819, 0.78886708, 0.9678234 , 0.25504056,
            0.01605732, 0.86116306],
           [0.81225684, 0.74938692, 0.87311014, 0.60926967, 0.08099347,
            0.57831579, 0.87853172],
           [0.31156153, 0.29001324, 0.80138038, 0.70238436, 0.68316256,
            0.5597545 , 0.92521069],
           [0.18299187, 0.00807766, 0.76930794, 0.90147133, 0.14532859,
            0.47055484, 0.28027783],
    ...
           [0.44845015, 0.36039683, 0.17294903, 0.06502653, 0.41469799,
            0.5538204 , 0.94282384],
           [0.07855612, 0.45039802, 0.1004898 , 0.21781207, 0.24807229,
            0.75919234, 0.54424633],
           [0.75070412, 0.23970918, 0.05135346, 0.28893851, 0.80654611,
            0.05652282, 0.57953724],
           [0.15759091, 0.89388756, 0.06860983, 0.45601225, 0.9451891 ,
            0.17636708, 0.08282849],
           [0.60873855, 0.83260481, 0.88980437, 0.39324111, 0.10517106,
            0.58080064, 0.87034423],
           [0.82323511, 0.50066824, 0.12546544, 0.80912471, 0.10238019,
            0.076352  , 0.83776101],
           [0.54614591, 0.98177807, 0.92022811, 0.17234721, 0.51430015,
            0.13693766, 0.64613142],
           [0.1621986 , 0.88548343, 0.59504595, 0.44007562, 0.57714631,
            0.23028885, 0.95751744],
           [0.38324888, 0.24022842, 0.67755819, 0.02122848, 0.83153294,
            0.63986292, 0.34294884],
           [0.53321483, 0.04643433, 0.0315087 , 0.81115085, 0.86331901,
            0.76882022, 0.18106648]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (times: 30, roi: 7)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.1598 0.5755 0.8279 ... 0.8633 0.7688 0.1811
        second   (times, roi) float64 0.9522 0.03814 0.2945 ... 0.6874 0.425 0.804
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.173 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
