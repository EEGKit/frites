.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.78081127, 0.42711523, 0.51194749, 0.48563224, 0.38840967,
            0.97639084, 0.71869787],
           [0.63273443, 0.2800842 , 0.93379559, 0.36388138, 0.92651963,
            0.28244278, 0.94660946],
           [0.05031474, 0.52175748, 0.23234043, 0.10901124, 0.04534888,
            0.52034218, 0.02805664],
           [0.32120925, 0.28107777, 0.3423766 , 0.91454454, 0.32736414,
            0.82353652, 0.94523981],
           [0.34493337, 0.5705599 , 0.99592012, 0.87943064, 0.63892383,
            0.80005478, 0.72478129],
           [0.41139248, 0.22876859, 0.17314215, 0.65554085, 0.20386359,
            0.08402439, 0.19989542],
           [0.49349397, 0.57833542, 0.01029312, 0.62943846, 0.4054514 ,
            0.95026763, 0.14965743],
           [0.91873126, 0.10878585, 0.83787947, 0.37928325, 0.9317868 ,
            0.64004439, 0.91684678],
           [0.76838522, 0.68605636, 0.8714137 , 0.99842237, 0.59447632,
            0.7162128 , 0.74522426],
           [0.537203  , 0.43017093, 0.3833322 , 0.15230702, 0.51712716,
            0.01144868, 0.94916304],
    ...
           [0.15082483, 0.39878037, 0.03609666, 0.78432079, 0.53479767,
            0.73076914, 0.18244741],
           [0.20644834, 0.08288155, 0.49033218, 0.41368246, 0.21179103,
            0.66394426, 0.41965866],
           [0.3265133 , 0.28162716, 0.65594154, 0.92512868, 0.19542475,
            0.77149004, 0.02331998],
           [0.73550747, 0.74831082, 0.01388646, 0.78675138, 0.51722778,
            0.29111596, 0.23858368],
           [0.62227948, 0.13274404, 0.40130782, 0.15207102, 0.33573817,
            0.46034815, 0.91727414],
           [0.03878455, 0.71431816, 0.55040448, 0.86167203, 0.1233154 ,
            0.97498461, 0.97223423],
           [0.9547017 , 0.18473766, 0.0885989 , 0.39192733, 0.98920369,
            0.11970552, 0.0050096 ],
           [0.47886959, 0.41456628, 0.99128028, 0.19766061, 0.90256445,
            0.12234891, 0.60693554],
           [0.7048677 , 0.3496349 , 0.8931654 , 0.39947648, 0.27303976,
            0.31003759, 0.77435537],
           [0.45985778, 0.24082692, 0.7317228 , 0.48108596, 0.75088587,
            0.67504476, 0.41293963]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (times: 30, roi: 7)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.7808 0.4271 0.5119 ... 0.7509 0.675 0.4129
        second   (times, roi) float64 0.2733 0.7163 0.1094 ... 0.5943 0.2923 0.8749
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.177 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
